# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/python
jobs:

- job: 'Test_vs2017_win2016'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
    #  Python27:
    #    python.version: '2.7'
    #  Python34:
    #    python.version: '3.4'
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      pip install Cython click
      pip install --only-binary=numpy,scipy numpy scipy
      pip install git+https://github.com/mobiusklein/ms_peak_picker.git
      pip install -r test-requirements.txt
    displayName: 'Install dependencies'
  - script: |
      python setup.py develop
      pip install pytest
      pytest -v -l ms_deisotope/test/ --junitxml=junit/test-results.xml
    displayName: 'pytest'
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- job: 'Publish_vs2017_win2016'
  dependsOn: 'Test_vs2017_win2016'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
     # Python27:
     #   python.version: '2.7'
     # Python34:
     #   python.version: '3.4'
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
    maxParallel: 4
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
        python -m pip install --upgrade pip
        pip install Cython wheel
        pip install -r test-requirements.txt
        python setup.py sdist bdist_wheel
    displayName: 'Build sdist'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact: dist'
    inputs:
      pathtoPublish: 'dist'
      artifactName: 'dist'