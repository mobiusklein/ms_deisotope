# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build and Publish Wheels

on:
  create:
    tags:
      - "v*"

jobs:
  build-manylinux:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel twine
        pip install coverage pytest pytest-cov -U
        pip install Cython --install-option="--no-cython-compile"
        pip install --only-binary=numpy,scipy,matplotlib numpy scipy matplotlib -U
        pip install -r test-requirements.txt
        pip install -e .
        python setup.py build sdist
    - name: Test with pytest
      run: |
        make test
    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel
    - name: Build wheels
      run: python -m cibuildwheel --output-dir dist/
      env:
        CIBW_BUILD: "cp38*-manylinux_x86_64 cp39*-manylinux_x86_64 cp310*-manylinux_x86_64"
        CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2014"
        CIBW_TEST_REQUIRES: "pytest"
        CIBW_BUILD_VERBOSITY: 5
        CIBW_ARCHS: "auto"
    - name: Archive ManyLinux Wheels
      uses: actions/upload-artifact@v3
      with:
        name: manylinux_wheels
        path: dist/*.whl
    - name: "Publish ManyLinux"
      env:
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        TWINE_USERNAME: __token__
      run: |
        twine upload dist/*manylinux*.whl dist/*.tar.gz
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel twine
        pip install coverage pytest pytest-cov -U
        pip install Cython --install-option="--no-cython-compile"
        pip install --only-binary=numpy,scipy numpy scipy -U
        pip install -r test-requirements.txt
        pip install -e .
    - name: Test with pytest
      run: |
        make test
    - name: "Windows"
      env:
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        TWINE_USERNAME: __token__
      run: |
        mkdir -p dist/
        pip wheel --no-deps -w dist/ .
        twine upload dist/ms_deisotope*.whl
      shell: bash